name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}



# name: SonarCloud analysis

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#   workflow_dispatch:

# permissions:
#   pull-requests: read # allows SonarCloud to decorate PRs with analysis results

# jobs:
#   Analysis:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Analyze with SonarCloud

#         # You can pin the exact commit or the version.
#         # uses: SonarSource/sonarcloud-github-action@v2.2.0
#         uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
#         with:
#           # Additional arguments for the SonarScanner CLI
#           args:
#             # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
#             # mandatory
#             -Dsonar.projectKey=
#             -Dsonar.organization=
#             # Comma-separated paths to directories containing main source files.
#             #-Dsonar.sources= # optional, default is project base directory
#             # Comma-separated paths to directories containing test source files.
#             #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
#             # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
#             #-Dsonar.verbose= # optional, default is false
#           # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
#           projectBaseDir: .


# name: Build
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build:
#     name: Build
#     runs-on: windows-latest
#     env:
#       BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up msbuild
#         uses: microsoft/setup-msbuild@v2
#       - name: Install sonar-scanner and build-wrapper
#         uses: sonarsource/sonarcloud-github-c-cpp@v3
#       - name: Run build-wrapper
#         run: |
#           build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} msbuild sonar_scanner_example.vcxproj /t:rebuild /nodeReuse:false
#       - name: Run sonar-scanner
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
#         run: |
#           sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
          


# name: SonarQube Cloud
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build:
#     name: Build and analyze
#     runs-on: windows-latest
#     env:
#       BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Install sonar-scanner and build-wrapper
#         uses: SonarSource/sonarcloud-github-c-cpp@v3
#       - name: Run build-wrapper
#         run: |
#           build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} <insert_your_clean_build_command>
#       - name: Run sonar-scanner
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: |
#           sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
